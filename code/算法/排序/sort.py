import math


def bucket_sort(lists):
    """桶排序"""
    buckets = [0] * ((max(lists) - min(lists)) + 1)  # 初始化桶，每个桶的元素为0，这里将
    for i in range(len(lists)):
        buckets[lists[i] - min(lists)] += 1  # 遍历数组a，在桶的相应位置累加值
    b = []
    for i in range(len(buckets)):
        if buckets[i] != 0:
            b += [i + min(lists)] * buckets[i]
    return b


def counting_sort(lists, k):  # k = max(lists)
    """计数排序"""
    n = len(lists)  # 计算a序列的长度
    output = [0 for i in range(n)]  # 设置输出序列并初始化为0
    counts = [0 for i in range(k + 1)]  # 设置计数序列并初始化为0

    # 遍历数组，每当取出一个值时，计数序列所对应位置的值 +1，直到数组遍历完毕
    # 比如 [0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0]，表示数组 1 有 2 个，3 有 1 个，4 有 1 个
    print("遍历数组...")
    for j in lists:
        counts[j] = counts[j] + 1
        print(counts)
    """
        [0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0]
        [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0]
        [0, 1, 0, 1, 1, 0, 0, 0, 0, 0, 0]
        [0, 2, 0, 1, 1, 0, 0, 0, 0, 0, 0]
        [0, 2, 0, 1, 1, 1, 0, 0, 0, 0, 0]
        [0, 2, 0, 1, 1, 1, 0, 0, 0, 1, 0]
        [0, 2, 1, 1, 1, 1, 0, 0, 0, 1, 0]
        [0, 2, 1, 1, 1, 1, 1, 0, 0, 1, 0]
        [0, 2, 1, 1, 1, 2, 1, 0, 0, 1, 0]
        [0, 2, 1, 2, 1, 2, 1, 0, 0, 1, 0]
        ==> counts = [0, 2, 1, 2, 1, 2, 1, 0, 0, 1, 0]
    """

    # 从左到右统计计数序列，使得当前的数值为小于或等于计数序列对应的数字的个数
    # 比如 count[5] = 8，表示 小于等于 5 的数有 8 个
    print("统计技术序列...")
    for i in range(1, len(counts)):
        counts[i] = counts[i] + counts[i - 1]
        print(counts)
    """
        [0, 2, 1, 2, 1, 2, 1, 0, 0, 1, 0]
        [0, 2, 3, 2, 1, 2, 1, 0, 0, 1, 0]
        [0, 2, 3, 5, 1, 2, 1, 0, 0, 1, 0]
        [0, 2, 3, 5, 6, 2, 1, 0, 0, 1, 0]
        [0, 2, 3, 5, 6, 8, 1, 0, 0, 1, 0]
        [0, 2, 3, 5, 6, 8, 9, 0, 0, 1, 0]
        [0, 2, 3, 5, 6, 8, 9, 9, 0, 1, 0]
        [0, 2, 3, 5, 6, 8, 9, 9, 9, 1, 0]
        [0, 2, 3, 5, 6, 8, 9, 9, 9, 10, 0]
        [0, 2, 3, 5, 6, 8, 9, 9, 9, 10, 10]
        ==> counts = [0, 2, 3, 5, 6, 8, 9, 9, 9, 10, 10]
    """

    # 遍历数组，输出序列添加对应的数字，同时计数序列将已添加的数字对应的计数值 -1
    # 比如第1位数字为3 ，count[3] 对应的计数值为 5 ，将 output 的第 4 位 添加为数字 3
    # 此时3被添加，那么计数序列对应的计数值 -1，则 count[3] = 4，即小于等于 3 的数字有 4 个
    print("添加排序结果...")
    for j in lists:
        output[counts[j] - 1] = j  # 输出序列添加对应的数字
        print(output)
        counts[j] = counts[j] - 1  # 计数序列将已添加的数字对应的计数值 -1
        print(counts)
        print('-' * 30)
    """
        [0, 0, 0, 0, 3, 0, 0, 0, 0, 0]
        [0, 2, 3, 4, 6, 8, 9, 9, 9, 10, 10]
        ------------------------------
        [0, 1, 0, 0, 3, 0, 0, 0, 0, 0]
        [0, 1, 3, 4, 6, 8, 9, 9, 9, 10, 10]
        ------------------------------
        [0, 1, 0, 0, 3, 4, 0, 0, 0, 0]
        [0, 1, 3, 4, 5, 8, 9, 9, 9, 10, 10]
        ------------------------------
        [1, 1, 0, 0, 3, 4, 0, 0, 0, 0]
        [0, 0, 3, 4, 5, 8, 9, 9, 9, 10, 10]
        ------------------------------
        [1, 1, 0, 0, 3, 4, 0, 5, 0, 0]
        [0, 0, 3, 4, 5, 7, 9, 9, 9, 10, 10]
        ------------------------------
        [1, 1, 0, 0, 3, 4, 0, 5, 0, 9]
        [0, 0, 3, 4, 5, 7, 9, 9, 9, 9, 10]
        ------------------------------
        [1, 1, 2, 0, 3, 4, 0, 5, 0, 9]
        [0, 0, 2, 4, 5, 7, 9, 9, 9, 9, 10]
        ------------------------------
        [1, 1, 2, 0, 3, 4, 0, 5, 6, 9]
        [0, 0, 2, 4, 5, 7, 8, 9, 9, 9, 10]
        ------------------------------
        [1, 1, 2, 0, 3, 4, 5, 5, 6, 9]
        [0, 0, 2, 4, 5, 6, 8, 9, 9, 9, 10]
        ------------------------------
        [1, 1, 2, 3, 3, 4, 5, 5, 6, 9]
        [0, 0, 2, 3, 5, 6, 8, 9, 9, 9, 10]
        ------------------------------
        [1, 1, 2, 3, 3, 4, 5, 5, 6, 9]
    """

    return output


def base_sort(lists, radix=10):
    """基数排序，lists为整数列表， radix为基数"""
    # 用 K 位数可表示任意十进制整数，这里注意的是，如果是二进制数排序，那么 radix=2
    K = int(math.ceil(math.log(max(lists) + 1, radix)))

    # 开始循环，每个数字均为 K 位，则需要 K 次循环
    # 每次循环建立一个列表，radix=10 则需要 10 个桶(表示尾数为0-9)，初始化每个桶为空列表
    for i in range(1, K + 1):
        bucket = [[] for j in range(radix)]  # 注意这里不能用 [[]] * radix

        # 遍历列表，获得整数第K位数字 （从低到高）
        for val in lists:
            bucket[val % (radix ** i) // (radix ** (i - 1))].append(val)

        del lists[:]
        for each in bucket:
            lists.extend(each)  # 桶合并
    return lists


if __name__ == '__main__':
    lists = [36, 12, 48, 16, 54, 96, 24, 64, 54, 361]

    # print(bucket_sort(lists))  # 桶排序
    # print(counting_sort(lists, 9))  # 计数排序
    print(base_sort(lists))  # 基数排序
